INTERFAZ

interfaz       : cola
usa            :
se explica con : secu(α)
genero         : cola(α)
operaciones    :

encolar(in/out c: cola(α), in k: α)
{c₀ =obs ^c}
{^c =obs encolar(^k, c₀)}

desencolar(in/out c: cola(α)) → res : α
{¬vacia?(^c) ∧ c₀ =obs ^c}
{^c =obs desencolar(c₀) ∧ ^res =obs proximo(cₒ)}

* Por que en la aridad uso c : cola(α) y no c : estr?
* Por que hace falta el renombre c₀ = ^c? (para hablar sobre el estado anterior?)
* No puedo dar un algoritmo explicito para desencolar porque no tengo la interfaz de cola(α)

tamano(in c: cola(α)) → res : nat
{true}
{^res =obs tamano(^c)}

* Esta igualdad que estoy usando no deberia ser la igualdad definicional ≡?

REPRESENTACION

cola(α) se representa con estr donde estr es secu(α)

Rep: ^'(estr) → boolean
Rep ≡ true

Abs: ^'(estr e) → cola(α) {Rep(e)}
(∀ e : ^'(estr)) Abs(e) =obs c : cola(α) /
    vacia?(c) =obs vacia(e) ∧ₗ
    ¬vacia?(c) ⟹ₗ (prim(e) =obs proximo(c) ∧ fin(e) =obs desencolar(c))

* Nunca estoy diciendo como hace ^ para convertir de una secuencia en la representacion al TAD secu
